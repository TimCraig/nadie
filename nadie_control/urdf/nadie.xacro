<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="nadie">

  <xacro:arg name="robot_namespace" default="/nadie" />

  <xacro:include filename="$(find nadie_control)/urdf/caster.urdf.xacro" />
  <xacro:include filename="$(find nadie_control)/urdf/wheel.urdf.xacro" />
  <!--xacro:include filename="$(find nadie_control)/urdf/lidar_sim.xacro" /-->


  <xacro:property name="M_PI" value="3.14159"/>
  <xacro:property name="wheel_vertical_offset" value="0.03282" />

  <xacro:property name="body_height" value="0.0508" />
  <xacro:property name="body_length" value="0.3048" />
  <xacro:property name="body_width" value="0.2286" />
  <xacro:property name="fwheel_offset" value="-0.13" />
  <xacro:property name="wheel_forward_of_center_distance" value=".0762" />
  <xacro:property name="motor_height" value="0.0254" />
  <xacro:property name="lidar_height" value="0.015" />
  <xacro:property name="lidar_length" value="0.045" />
  <xacro:property name="lidar_width" value="0.015" />
  <xacro:property name="wheel_radius" value="0.06" />
  <xacro:property name="wheel_spacer" value="0.00254" />
  <xacro:property name="wheel_width" value="0.060" />
  <xacro:property name="body_center_height" value="${wheel_radius+(motor_height/2)+(body_height/2)}" />

  <xacro:property name="lidar_x_offset" value="${(body_length/2)-(lidar_width/2)}" />
  <xacro:property name="lidar_z_offset" value="${body_center_height+(body_height/2)+(lidar_height/2)+.00508}" />

  <material name="base">
    <color rgba="0.25 0.25 0.53 1" />>
  </material>

  <material name="wheel">
    <color rgba="0.6 0.5 0.5 1" />
  </material>

  <!--xacro:include filename="$(find m1)/robots/m1.gazebo" /-->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <!-- controlPeriod defaults to parent_model_->GetWorld()->Physics()->GetMaxStepSize() -->
      <!-- eStopTopic if specified, subscribe to this topic and capture 'data' value --> 
      <legacyModeNS>false</legacyModeNS> <!-- If using DefaultRobotHWSim, set this to "true" to fix namespace issue -->
      <robotNamespace>$(arg robot_namespace)</robotNamespace> <!-- parent_model_->GetName() -->
      <!--robotParam>robot_description</robotParam--> <!-- robot_description -->
      <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType--> <!-- gazebo_ros_control/DefaultRobotHWSim, which becomes the controller manager -->
    </plugin>

  </gazebo>

  <!-- Parts -->
  <link name="base_link">
    <collision>
      <geometry>
        <box size="${body_length} ${body_width} 0.0508"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 ${body_center_height}"/>
    </collision>
    <visual>
      <geometry>
        <box size="${body_length} ${body_width} 0.0508"/>
      </geometry>
      <material name="base" />
      <origin rpy="0 0 0" xyz="0 0 ${body_center_height}"/>
    </visual>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="1" />
        <inertia
          ixx="1.0" ixy="0.0" ixz="0.0"
          iyy="1.0" iyz="0.0"
          izz="1.0" />
    </inertial>
  </link>
  
  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- Interial link stores the robot's inertial information -->
  <link name="inertial_link">
    <inertial>
      <mass value="46.034" />
      <origin xyz="-0.00065 -0.085 0.062" />
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" />
    </inertial>
  </link>

  <joint name="inertial_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="inertial_link" />
  </joint>

  <xacro:wheel wheel_prefix="front_left">
    <origin xyz="${wheel_forward_of_center_distance} ${(body_width/2)+wheel_spacer+(wheel_width/2)} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel wheel_prefix="front_right">
    <origin xyz="${wheel_forward_of_center_distance} -${(body_width/2)+wheel_spacer+(wheel_width/2)} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:caster wheel_prefix="caster">
    <origin xyz="${fwheel_offset} 0 ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:caster>

  <!-- Hokuyo Laser -->
  <link name="hokuyo_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://nadie_control/meshes/hokuyo.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="${lidar_x_offset} 0 ${lidar_z_offset}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="hokuyo_link"/>
  </joint>

  <gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>7</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <alwaysOn>false</alwaysOn>
        <!--robotNamespace></robotNamespace-->
        <topicName>/scan</topicName>
        <!--updateRate>7.0</updateRate-->
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!--link name="neato">
    <collision>
      <geometry>
        <box size="${lidar_width} ${lidar_length} ${lidar_height}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="1" />
        <inertia
          ixx="1.0" ixy="0.0" ixz="0.0"
          iyy="1.0" iyz="0.0"
          izz="1.0" />
    </inertial>
    <visual>
      <geometry>
        <box size="${lidar_width} ${lidar_length} ${lidar_height}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0.5 0 0 1"/>
      </material>
    </visual>
  </link>
  
  <joint name="base_to_neato" type="fixed">
    <parent link="base_link"/>
    <child link="neato"/>
    <origin xyz="${lidar_x_offset} 0  ${lidar_z_offset}" rpy="0 0 0"/>
  </joint-->
  
</robot>
